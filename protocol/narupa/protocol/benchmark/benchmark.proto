// Copyright (c) Alex Jamieson-Binnie. All rights reserved.
// Licensed under the GPL. See License.txt in the project root for license information.

syntax = "proto3";

import "narupa/protocol/instance/get_frame.proto";

package narupa.protocol.benchmark;

service StreamProvider {
    // Request reply simple message.
    rpc GetSimpleMessage(SimpleMessage) returns (SimpleMessage);
    // Stream a series of frames.
    rpc GetFrames (GetFrameRequest) returns (stream narupa.protocol.instance.GetFrameResponse);
    // Stream a series of frames encoded as raw data.
    rpc GetFramesRaw (GetFrameRequest) returns (stream RawFrame);
    // Stream a series of frames, throttled at a constant rate of 30 FPS.
    rpc GetFramesThrottled(GetFrameRequest) returns (stream narupa.protocol.instance.GetFrameResponse);

}

message SimpleMessage {
    int32 payload = 1;
}

message GetFrameRequest {
    // Number of atoms to be sent in frame.
    int32 n_atoms = 1;
    // Number of frames to send.
    int32 n_frames = 2;
}
message RawFrame {
    repeated float frame = 1;
}
