on: [push]
name: "Tests and validation"

jobs:
  python-tests:
    name: Python unit and integration tests
    runs-on: ubuntu-latest
    defaults:
      run:
        # This is necessary for the conda action. It replaces `conda init` as
        # the shell does not load ,profile or .bashrc.
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniforge-version: latest
      - name: Install narupa dependancies
        run: conda install mpi4py openmm
      - name: Install tests dependancies
        run: python -m pip install -r python-libraries/requirements.test
      - name: Compile
        run: ./compile.sh --no-dotnet
      - name: Parallel tests
        run: python -m pytest --cov narupa python-libraries -n auto -m 'not serial'
      - name: Serial tests
        run: python -m pytest --cov narupa python-libraries -n auto -m 'serial'
  mypy:
    name: Type analysis for python
    runs-on: ubuntu-latest
    defaults:
      run:
        # This is necessary for the conda action. It replaces `conda init` as
        # the shell does not load ,profile or .bashrc.
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniforge-version: latest
      - name: Install narupa dependancies
        run: conda install mpi4py openmm
      - name: Install tests dependancies
        run: python -m pip install -r python-libraries/requirements.test
      - name: Compile
        run: ./compile.sh --no-dotnet
      - name: mypy
        run: |
          # Mypy accepts paths, modules or packages as inputs. However, only
          # packages work reasonably well with packages. So we need to generate
          # a list of the packages we want to test.
          packages=$(find python-libraries -name __init__.py \
            | sed 's/__init__.py//g' \
            # When the directory is
            # `python-libraries/narupa-something/src/narupa/something`, the package
            # is what comes after the `src`.
            | awk '{split($0, a, /src/); print(a[2])}' \
            | sed 's#/#.#g' \
            | cut -c 2- \ | sed 's/\.$//g' \  # Remove the dot at the beginning and the end
            | grep -v '^$' \  # Empty lines are path that do not have an `src` directory
            | grep -v protocol \  # narupa.protocol is generated and mypy has issues dealing with the package
            | grep -v '\..*\.' \  # Only keep the first level, narupa.something, not narupa.something.longer
            | tr '\n' ' ')  # Put all the packages on a single line
          mypy --ignore-missing-imports --namespace-packages -p $packages
  csharp-tests:
    name: C# unit and integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '2.1.x'
      - name: Compile
        run: ./compile.sh --no-python
      - name: Tests
        run: cd ./csharp-libraries && dotnet test
