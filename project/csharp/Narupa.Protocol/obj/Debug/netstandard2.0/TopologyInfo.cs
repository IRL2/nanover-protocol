// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: narupa/protocol/topology/TopologyInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Narupa.Protocol.Topology {

  /// <summary>Holder for reflection information generated from narupa/protocol/topology/TopologyInfo.proto</summary>
  public static partial class TopologyInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for narupa/protocol/topology/TopologyInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TopologyInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CituYXJ1cGEvcHJvdG9jb2wvdG9wb2xvZ3kvVG9wb2xvZ3lJbmZvLnByb3Rv",
            "EhhuYXJ1cGEucHJvdG9jb2wudG9wb2xvZ3kaJ25hcnVwYS9wcm90b2NvbC90",
            "b3BvbG9neS9BdG9tSW5mby5wcm90bxoobmFydXBhL3Byb3RvY29sL3RvcG9s",
            "b2d5L0NoYWluSW5mby5wcm90bxonbmFydXBhL3Byb3RvY29sL3RvcG9sb2d5",
            "L0JvbmRQYWlyLnByb3RvGipuYXJ1cGEvcHJvdG9jb2wvdG9wb2xvZ3kvUmVz",
            "aWR1ZUluZm8ucHJvdG8i4gEKDFRvcG9sb2d5SW5mbxIzCgZjaGFpbnMYASAD",
            "KAsyIy5uYXJ1cGEucHJvdG9jb2wudG9wb2xvZ3kuQ2hhaW5JbmZvEjcKCHJl",
            "c2lkdWVzGAIgAygLMiUubmFydXBhLnByb3RvY29sLnRvcG9sb2d5LlJlc2lk",
            "dWVJbmZvEjEKBWF0b21zGAMgAygLMiIubmFydXBhLnByb3RvY29sLnRvcG9s",
            "b2d5LkF0b21JbmZvEjEKBWJvbmRzGAQgAygLMiIubmFydXBhLnByb3RvY29s",
            "LnRvcG9sb2d5LkJvbmRQYWlyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Narupa.Protocol.Topology.AtomInfoReflection.Descriptor, global::Narupa.Protocol.Topology.ChainInfoReflection.Descriptor, global::Narupa.Protocol.Topology.BondPairReflection.Descriptor, global::Narupa.Protocol.Topology.ResidueInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Narupa.Protocol.Topology.TopologyInfo), global::Narupa.Protocol.Topology.TopologyInfo.Parser, new[]{ "Chains", "Residues", "Atoms", "Bonds" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TopologyInfo : pb::IMessage<TopologyInfo> {
    private static readonly pb::MessageParser<TopologyInfo> _parser = new pb::MessageParser<TopologyInfo>(() => new TopologyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopologyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Narupa.Protocol.Topology.TopologyInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopologyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopologyInfo(TopologyInfo other) : this() {
      chains_ = other.chains_.Clone();
      residues_ = other.residues_.Clone();
      atoms_ = other.atoms_.Clone();
      bonds_ = other.bonds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopologyInfo Clone() {
      return new TopologyInfo(this);
    }

    /// <summary>Field number for the "chains" field.</summary>
    public const int ChainsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Narupa.Protocol.Topology.ChainInfo> _repeated_chains_codec
        = pb::FieldCodec.ForMessage(10, global::Narupa.Protocol.Topology.ChainInfo.Parser);
    private readonly pbc::RepeatedField<global::Narupa.Protocol.Topology.ChainInfo> chains_ = new pbc::RepeatedField<global::Narupa.Protocol.Topology.ChainInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Narupa.Protocol.Topology.ChainInfo> Chains {
      get { return chains_; }
    }

    /// <summary>Field number for the "residues" field.</summary>
    public const int ResiduesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Narupa.Protocol.Topology.ResidueInfo> _repeated_residues_codec
        = pb::FieldCodec.ForMessage(18, global::Narupa.Protocol.Topology.ResidueInfo.Parser);
    private readonly pbc::RepeatedField<global::Narupa.Protocol.Topology.ResidueInfo> residues_ = new pbc::RepeatedField<global::Narupa.Protocol.Topology.ResidueInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Narupa.Protocol.Topology.ResidueInfo> Residues {
      get { return residues_; }
    }

    /// <summary>Field number for the "atoms" field.</summary>
    public const int AtomsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Narupa.Protocol.Topology.AtomInfo> _repeated_atoms_codec
        = pb::FieldCodec.ForMessage(26, global::Narupa.Protocol.Topology.AtomInfo.Parser);
    private readonly pbc::RepeatedField<global::Narupa.Protocol.Topology.AtomInfo> atoms_ = new pbc::RepeatedField<global::Narupa.Protocol.Topology.AtomInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Narupa.Protocol.Topology.AtomInfo> Atoms {
      get { return atoms_; }
    }

    /// <summary>Field number for the "bonds" field.</summary>
    public const int BondsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Narupa.Protocol.Topology.BondPair> _repeated_bonds_codec
        = pb::FieldCodec.ForMessage(34, global::Narupa.Protocol.Topology.BondPair.Parser);
    private readonly pbc::RepeatedField<global::Narupa.Protocol.Topology.BondPair> bonds_ = new pbc::RepeatedField<global::Narupa.Protocol.Topology.BondPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Narupa.Protocol.Topology.BondPair> Bonds {
      get { return bonds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopologyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopologyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!chains_.Equals(other.chains_)) return false;
      if(!residues_.Equals(other.residues_)) return false;
      if(!atoms_.Equals(other.atoms_)) return false;
      if(!bonds_.Equals(other.bonds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= chains_.GetHashCode();
      hash ^= residues_.GetHashCode();
      hash ^= atoms_.GetHashCode();
      hash ^= bonds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      chains_.WriteTo(output, _repeated_chains_codec);
      residues_.WriteTo(output, _repeated_residues_codec);
      atoms_.WriteTo(output, _repeated_atoms_codec);
      bonds_.WriteTo(output, _repeated_bonds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chains_.CalculateSize(_repeated_chains_codec);
      size += residues_.CalculateSize(_repeated_residues_codec);
      size += atoms_.CalculateSize(_repeated_atoms_codec);
      size += bonds_.CalculateSize(_repeated_bonds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopologyInfo other) {
      if (other == null) {
        return;
      }
      chains_.Add(other.chains_);
      residues_.Add(other.residues_);
      atoms_.Add(other.atoms_);
      bonds_.Add(other.bonds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chains_.AddEntriesFrom(input, _repeated_chains_codec);
            break;
          }
          case 18: {
            residues_.AddEntriesFrom(input, _repeated_residues_codec);
            break;
          }
          case 26: {
            atoms_.AddEntriesFrom(input, _repeated_atoms_codec);
            break;
          }
          case 34: {
            bonds_.AddEntriesFrom(input, _repeated_bonds_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
