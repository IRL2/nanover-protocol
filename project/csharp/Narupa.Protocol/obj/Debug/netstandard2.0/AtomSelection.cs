// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: narupa/protocol/selection/AtomSelection.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Narupa.Protocol.Selection {

  /// <summary>Holder for reflection information generated from narupa/protocol/selection/AtomSelection.proto</summary>
  public static partial class AtomSelectionReflection {

    #region Descriptor
    /// <summary>File descriptor for narupa/protocol/selection/AtomSelection.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AtomSelectionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1uYXJ1cGEvcHJvdG9jb2wvc2VsZWN0aW9uL0F0b21TZWxlY3Rpb24ucHJv",
            "dG8SGW5hcnVwYS5wcm90b2NvbC5zZWxlY3Rpb24aJ25hcnVwYS9wcm90b2Nv",
            "bC9zZWxlY3Rpb24vSW5kaWNlcy5wcm90bxorbmFydXBhL3Byb3RvY29sL3Nl",
            "bGVjdGlvbi9WbWRTZWxlY3Rvci5wcm90byKUAQoNQXRvbVNlbGVjdGlvbhI1",
            "CgdpbmRpY2VzGAEgASgLMiIubmFydXBhLnByb3RvY29sLnNlbGVjdGlvbi5J",
            "bmRpY2VzSAASOgoIc2VsZWN0b3IYAiABKAsyJi5uYXJ1cGEucHJvdG9jb2wu",
            "c2VsZWN0aW9uLlZtZFNlbGVjdG9ySABCEAoOYXRvbV9zZWxlY3Rpb25iBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Narupa.Protocol.Selection.IndicesReflection.Descriptor, global::Narupa.Protocol.Selection.VmdSelectorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Narupa.Protocol.Selection.AtomSelection), global::Narupa.Protocol.Selection.AtomSelection.Parser, new[]{ "Indices", "Selector" }, new[]{ "AtomSelection" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AtomSelection : pb::IMessage<AtomSelection> {
    private static readonly pb::MessageParser<AtomSelection> _parser = new pb::MessageParser<AtomSelection>(() => new AtomSelection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AtomSelection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Narupa.Protocol.Selection.AtomSelectionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AtomSelection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AtomSelection(AtomSelection other) : this() {
      switch (other.AtomSelectionCase) {
        case AtomSelectionOneofCase.Indices:
          Indices = other.Indices.Clone();
          break;
        case AtomSelectionOneofCase.Selector:
          Selector = other.Selector.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AtomSelection Clone() {
      return new AtomSelection(this);
    }

    /// <summary>Field number for the "indices" field.</summary>
    public const int IndicesFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Narupa.Protocol.Selection.Indices Indices {
      get { return atomSelectionCase_ == AtomSelectionOneofCase.Indices ? (global::Narupa.Protocol.Selection.Indices) atomSelection_ : null; }
      set {
        atomSelection_ = value;
        atomSelectionCase_ = value == null ? AtomSelectionOneofCase.None : AtomSelectionOneofCase.Indices;
      }
    }

    /// <summary>Field number for the "selector" field.</summary>
    public const int SelectorFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Narupa.Protocol.Selection.VmdSelector Selector {
      get { return atomSelectionCase_ == AtomSelectionOneofCase.Selector ? (global::Narupa.Protocol.Selection.VmdSelector) atomSelection_ : null; }
      set {
        atomSelection_ = value;
        atomSelectionCase_ = value == null ? AtomSelectionOneofCase.None : AtomSelectionOneofCase.Selector;
      }
    }

    private object atomSelection_;
    /// <summary>Enum of possible cases for the "atom_selection" oneof.</summary>
    public enum AtomSelectionOneofCase {
      None = 0,
      Indices = 1,
      Selector = 2,
    }
    private AtomSelectionOneofCase atomSelectionCase_ = AtomSelectionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AtomSelectionOneofCase AtomSelectionCase {
      get { return atomSelectionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAtomSelection() {
      atomSelectionCase_ = AtomSelectionOneofCase.None;
      atomSelection_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AtomSelection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AtomSelection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Indices, other.Indices)) return false;
      if (!object.Equals(Selector, other.Selector)) return false;
      if (AtomSelectionCase != other.AtomSelectionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (atomSelectionCase_ == AtomSelectionOneofCase.Indices) hash ^= Indices.GetHashCode();
      if (atomSelectionCase_ == AtomSelectionOneofCase.Selector) hash ^= Selector.GetHashCode();
      hash ^= (int) atomSelectionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (atomSelectionCase_ == AtomSelectionOneofCase.Indices) {
        output.WriteRawTag(10);
        output.WriteMessage(Indices);
      }
      if (atomSelectionCase_ == AtomSelectionOneofCase.Selector) {
        output.WriteRawTag(18);
        output.WriteMessage(Selector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (atomSelectionCase_ == AtomSelectionOneofCase.Indices) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Indices);
      }
      if (atomSelectionCase_ == AtomSelectionOneofCase.Selector) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Selector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AtomSelection other) {
      if (other == null) {
        return;
      }
      switch (other.AtomSelectionCase) {
        case AtomSelectionOneofCase.Indices:
          if (Indices == null) {
            Indices = new global::Narupa.Protocol.Selection.Indices();
          }
          Indices.MergeFrom(other.Indices);
          break;
        case AtomSelectionOneofCase.Selector:
          if (Selector == null) {
            Selector = new global::Narupa.Protocol.Selection.VmdSelector();
          }
          Selector.MergeFrom(other.Selector);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Narupa.Protocol.Selection.Indices subBuilder = new global::Narupa.Protocol.Selection.Indices();
            if (atomSelectionCase_ == AtomSelectionOneofCase.Indices) {
              subBuilder.MergeFrom(Indices);
            }
            input.ReadMessage(subBuilder);
            Indices = subBuilder;
            break;
          }
          case 18: {
            global::Narupa.Protocol.Selection.VmdSelector subBuilder = new global::Narupa.Protocol.Selection.VmdSelector();
            if (atomSelectionCase_ == AtomSelectionOneofCase.Selector) {
              subBuilder.MergeFrom(Selector);
            }
            input.ReadMessage(subBuilder);
            Selector = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
