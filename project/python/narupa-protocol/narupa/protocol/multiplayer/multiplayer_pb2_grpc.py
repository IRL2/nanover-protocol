# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from narupa.protocol.multiplayer import multiplayer_pb2 as narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2


class MultiplayerStub(object):
  """Defines a VR multiplayer service.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SubscribeToAvatars = channel.unary_stream(
        '/narupa.multiplayer.Multiplayer/SubscribeToAvatars',
        request_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.SubscribeToAvatarsRequest.SerializeToString,
        response_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.Avatar.FromString,
        )
    self.PublishAvatar = channel.stream_unary(
        '/narupa.multiplayer.Multiplayer/PublishAvatar',
        request_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.Avatar.SerializeToString,
        response_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.PublishAvatarReply.FromString,
        )
    self.SubscribeToSceneProperties = channel.unary_stream(
        '/narupa.multiplayer.Multiplayer/SubscribeToSceneProperties',
        request_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.ScenePropertyRequest.SerializeToString,
        response_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.SceneProperties.FromString,
        )
    self.SetLockScene = channel.unary_unary(
        '/narupa.multiplayer.Multiplayer/SetLockScene',
        request_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.LockSceneProperty.SerializeToString,
        response_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.LockSceneProperty.FromString,
        )
    self.UnlockScene = channel.unary_unary(
        '/narupa.multiplayer.Multiplayer/UnlockScene',
        request_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.LockSceneProperty.SerializeToString,
        response_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.LockSceneProperty.FromString,
        )
    self.SetSceneProperty = channel.unary_unary(
        '/narupa.multiplayer.Multiplayer/SetSceneProperty',
        request_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.SetScenePropertyRequest.SerializeToString,
        response_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.ScenePropertyReply.FromString,
        )
    self.JoinMultiplayer = channel.unary_unary(
        '/narupa.multiplayer.Multiplayer/JoinMultiplayer',
        request_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.JoinMultiplayerRequest.SerializeToString,
        response_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.JoinMultiplayerResponse.FromString,
        )


class MultiplayerServicer(object):
  """Defines a VR multiplayer service.
  """

  def SubscribeToAvatars(self, request, context):
    """Represents an avatar stream.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PublishAvatar(self, request_iterator, context):
    """Client publish avatar stream.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeToSceneProperties(self, request, context):
    """Joins the stream of updates to the multiplayer scene properties.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetLockScene(self, request, context):
    """Request to lock the scene.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnlockScene(self, request, context):
    """Request to unlock the scene.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetSceneProperty(self, request, context):
    """Request to set the scene properties.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def JoinMultiplayer(self, request, context):
    """Request to join multiplayer session, and receive a PlayerID.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MultiplayerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SubscribeToAvatars': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeToAvatars,
          request_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.SubscribeToAvatarsRequest.FromString,
          response_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.Avatar.SerializeToString,
      ),
      'PublishAvatar': grpc.stream_unary_rpc_method_handler(
          servicer.PublishAvatar,
          request_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.Avatar.FromString,
          response_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.PublishAvatarReply.SerializeToString,
      ),
      'SubscribeToSceneProperties': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeToSceneProperties,
          request_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.ScenePropertyRequest.FromString,
          response_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.SceneProperties.SerializeToString,
      ),
      'SetLockScene': grpc.unary_unary_rpc_method_handler(
          servicer.SetLockScene,
          request_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.LockSceneProperty.FromString,
          response_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.LockSceneProperty.SerializeToString,
      ),
      'UnlockScene': grpc.unary_unary_rpc_method_handler(
          servicer.UnlockScene,
          request_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.LockSceneProperty.FromString,
          response_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.LockSceneProperty.SerializeToString,
      ),
      'SetSceneProperty': grpc.unary_unary_rpc_method_handler(
          servicer.SetSceneProperty,
          request_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.SetScenePropertyRequest.FromString,
          response_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.ScenePropertyReply.SerializeToString,
      ),
      'JoinMultiplayer': grpc.unary_unary_rpc_method_handler(
          servicer.JoinMultiplayer,
          request_deserializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.JoinMultiplayerRequest.FromString,
          response_serializer=narupa_dot_protocol_dot_multiplayer_dot_multiplayer__pb2.JoinMultiplayerResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'narupa.multiplayer.Multiplayer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
