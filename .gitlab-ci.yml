image: intangiblerealitieslab/dotnet-conda
stages:
  - test
  - deploy

release:
  stage: deploy
  only:
    - master
    - develop
  artifacts:
    paths:
      - python-libraries
      - csharp-libraries/Narupa.Protocol/bin/Release
  script:
    - ./compile.sh

# triggers a build of the narupa documentation repo. 
trigger_docs_build:
  stage: deploy
  script:
    - "curl -X POST -F token=6ebebef71969e5dd996b5df299bb22 -F ref=master https://gitlab.com/api/v4/projects/11677300/trigger/pipeline"

debug:
  stage: test
  script:
    - ./compile.sh
    - python -m pip install -r python-libraries/requirements.test
    - python -m pytest --cov=narupa python-libraries
    - coverage html
  artifacts:
    paths:
      - htmlcov
      - csharp-libraries/Narupa.Protocol/bin/Release

test_dotnet:
  stage: test
  variables:
    test_path: "csharp-libraries"
  script:
    - "cd $test_path"
    - "dotnet test"

build_conda:
    stage: deploy
    variables:
        build_command: "conda build --prefix-length=100 "
    script:
        # Configure the environment. We need conda-forge to get the science
        # related packages (openmm, ase, mdanalysis)
        - conda config --env --add channels conda-forge
        - conda config --env --add channels omnia
        - conda install conda-build grpcio-tools
        # Compiling the prototypes
        - python python-libraries/narupa-core/setup.py compile_proto --proto-dir=protocol
        # narupa-core must come first as all depends on it
        - cd python-libraries/narupa-core/conda; $build_command .
        - cd ../../../
        - $build_command python-libraries/narupa-openmm/conda
        - $build_command python-libraries/narupa-ase/conda
        - $build_command python-libraries/narupa-mdanalysis/conda
        # narupa-server must come last as it depends on everything
        - $build_command python-libraries/narupa-server/conda
