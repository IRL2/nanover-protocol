# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import trajectory_pb2 as trajectory__pb2


class InstanceServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.LoadTrajectory = channel.unary_unary(
        '/InstanceService/LoadTrajectory',
        request_serializer=trajectory__pb2.LoadTrajectoryRequest.SerializeToString,
        response_deserializer=trajectory__pb2.LoadTrajectoryResponse.FromString,
        )
    self.SetTrajectory = channel.unary_unary(
        '/InstanceService/SetTrajectory',
        request_serializer=trajectory__pb2.SetTrajectoryRequest.SerializeToString,
        response_deserializer=trajectory__pb2.SetTrajectoryResponse.FromString,
        )
    self.GetInstanceAtomCount = channel.unary_unary(
        '/InstanceService/GetInstanceAtomCount',
        request_serializer=trajectory__pb2.GetInstanceAtomCountRequest.SerializeToString,
        response_deserializer=trajectory__pb2.GetInstanceAtomCountResponse.FromString,
        )


class InstanceServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def LoadTrajectory(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetTrajectory(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetInstanceAtomCount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_InstanceServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'LoadTrajectory': grpc.unary_unary_rpc_method_handler(
          servicer.LoadTrajectory,
          request_deserializer=trajectory__pb2.LoadTrajectoryRequest.FromString,
          response_serializer=trajectory__pb2.LoadTrajectoryResponse.SerializeToString,
      ),
      'SetTrajectory': grpc.unary_unary_rpc_method_handler(
          servicer.SetTrajectory,
          request_deserializer=trajectory__pb2.SetTrajectoryRequest.FromString,
          response_serializer=trajectory__pb2.SetTrajectoryResponse.SerializeToString,
      ),
      'GetInstanceAtomCount': grpc.unary_unary_rpc_method_handler(
          servicer.GetInstanceAtomCount,
          request_deserializer=trajectory__pb2.GetInstanceAtomCountRequest.FromString,
          response_serializer=trajectory__pb2.GetInstanceAtomCountResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'InstanceService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
