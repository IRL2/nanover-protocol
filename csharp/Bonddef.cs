// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bonddef.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Narupa.Protocol.Topology {

  /// <summary>Holder for reflection information generated from bonddef.proto</summary>
  public static partial class BonddefReflection {

    #region Descriptor
    /// <summary>File descriptor for bonddef.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BonddefReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1ib25kZGVmLnByb3RvEg9uYXJ1cGEudG9wb2xvZ3kiKwoHQm9uZERlZhIP",
            "CgdpbmRleF9hGAEgASgFEg8KB2luZGV4X2IYAiABKAVCG6oCGE5hcnVwYS5Q",
            "cm90b2NvbC5Ub3BvbG9neWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Narupa.Protocol.Topology.BondDef), global::Narupa.Protocol.Topology.BondDef.Parser, new[]{ "IndexA", "IndexB" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BondDef : pb::IMessage<BondDef> {
    private static readonly pb::MessageParser<BondDef> _parser = new pb::MessageParser<BondDef>(() => new BondDef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BondDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Narupa.Protocol.Topology.BonddefReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BondDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BondDef(BondDef other) : this() {
      indexA_ = other.indexA_;
      indexB_ = other.indexB_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BondDef Clone() {
      return new BondDef(this);
    }

    /// <summary>Field number for the "index_a" field.</summary>
    public const int IndexAFieldNumber = 1;
    private int indexA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IndexA {
      get { return indexA_; }
      set {
        indexA_ = value;
      }
    }

    /// <summary>Field number for the "index_b" field.</summary>
    public const int IndexBFieldNumber = 2;
    private int indexB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IndexB {
      get { return indexB_; }
      set {
        indexB_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BondDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BondDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IndexA != other.IndexA) return false;
      if (IndexB != other.IndexB) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IndexA != 0) hash ^= IndexA.GetHashCode();
      if (IndexB != 0) hash ^= IndexB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IndexA != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IndexA);
      }
      if (IndexB != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IndexB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IndexA != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IndexA);
      }
      if (IndexB != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IndexB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BondDef other) {
      if (other == null) {
        return;
      }
      if (other.IndexA != 0) {
        IndexA = other.IndexA;
      }
      if (other.IndexB != 0) {
        IndexB = other.IndexB;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IndexA = input.ReadInt32();
            break;
          }
          case 16: {
            IndexB = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
