# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: narupa/protocol/selection/IndexList.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='narupa/protocol/selection/IndexList.proto',
  package='narupa.protocol.selection',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n)narupa/protocol/selection/IndexList.proto\x12\x19narupa.protocol.selection\"\x1c\n\tIndexList\x12\x0f\n\x07indices\x18\x01 \x03(\rb\x06proto3')
)




_INDEXLIST = _descriptor.Descriptor(
  name='IndexList',
  full_name='narupa.protocol.selection.IndexList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='indices', full_name='narupa.protocol.selection.IndexList.indices', index=0,
      number=1, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=72,
  serialized_end=100,
)

DESCRIPTOR.message_types_by_name['IndexList'] = _INDEXLIST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

IndexList = _reflection.GeneratedProtocolMessageType('IndexList', (_message.Message,), dict(
  DESCRIPTOR = _INDEXLIST,
  __module__ = 'narupa.protocol.selection.IndexList_pb2'
  # @@protoc_insertion_point(class_scope:narupa.protocol.selection.IndexList)
  ))
_sym_db.RegisterMessage(IndexList)


# @@protoc_insertion_point(module_scope)
