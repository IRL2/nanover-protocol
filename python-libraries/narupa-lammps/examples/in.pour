# Pour granular particles into chute container, then induce flow

atom_style	sphere
atom_modify     map array
boundary	p p fm
newton		off
comm_modify	vel yes

region		reg block -10 10 -10 10 -0.5 16 units box
create_box	1 reg

neighbor	0.2 bin
neigh_modify	delay 0

# IMPORTANT NOTE: these values of stiffness (2000) and timestep (0.001)
# are used in this example file to produce a quick simulation and movie.
# More appropriate values for realistic simulations would be
# k = 2.0e5 and dt = 0.0001, as in bench/in.chute.

pair_style      gran/hooke/history 500.0 NULL 50.0 NULL 0.5 0
pair_coeff	* *

timestep	0.001

python         post_force_callback here """
from narupa.lammps import LammpsHook
from lammps import lammps
h = LammpsHook()

def post_force_callback(lmp,v):
  #print("thing is running")
  h.lammps_hook(lmp)
"""

fix		1 all nve/sphere
fix		2 all gravity 1.0 spherical 0.0 -180.0
fix		zlower all wall/gran hooke/history 2000.0 NULL 50.0 NULL 0.5 0 &
		zplane 0.0 20000.0 

#region		slab block -5.0 5.0 -5.0 5.0 10.0 15.0 units box
region		slab block -9.0 9.0 -9.0 9.0 10.0 15.0 units box
fix		ins all pour 9000 1 300719 vol 0.3 50 region slab
fix             3 all python/invoke 1 post_force post_force_callback

compute		1 all erotate/sphere
thermo_style	custom step atoms ke c_1 vol
thermo		1000
thermo_modify	lost ignore norm no
compute_modify	thermo_temp dynamic/dof yes

#dump		id all atom 1000 dump.pour

#dump		2 all image 1000 image.*.jpg type type &
#		axes yes 0.8 0.02 view 80 -30
#dump_modify	2 pad 5

#dump		3 all movie 1000 movie.mpg type type &
#		axes yes 0.8 0.02 view 80 -30
#dump_modify	3 pad 5

run		25000

python         post_force_callback here """
from narupa.lammps import LammpsHook
from lammps import lammps
h = LammpsHook()

def post_force_callback(lmp,v):
  #print("thing is running")
  h.lammps_hook(lmp)
"""

unfix		ins
fix		2 all gravity 4.0 chute 26.0
fix             3 all python/invoke 1 post_force post_force_callback
run		25000000
